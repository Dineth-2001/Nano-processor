/*

Xilinx Vivado v2018.1 (64-bit) [Major: 2018, Minor: 1]
SW Build: 2188600 on Wed Apr  4 18:40:38 MDT 2018
IP Build: 2185939 on Wed Apr  4 20:55:05 MDT 2018

Process ID: 5248
License: Customer

Current time: 	Wed Apr 03 14:48:40 IST 2024
Time zone: 	India Standard Time (Asia/Colombo)

OS: Windows 10
OS Version: 10.0
OS Architecture: amd64
Available processors (cores): 16

Screen size: 1536x864
Screen resolution (DPI): 96
Available screens: 1
Available disk space: 213 GB
Default font: family=Dialog,name=Dialog,style=plain,size=12

Java version: 	1.8.0_112 64-bit
Java home: 	C:/Xilinx/Vivado/2018.1/tps/win64/jre
Java executable location: 	C:/Xilinx/Vivado/2018.1/tps/win64/jre/bin/java.exe
Java initial memory (-Xms): 	128 MB
Java maximum memory (-Xmx):	 2 GB


User name: 	sahan
User home directory: C:/Users/sahan
User working directory: C:/Users/sahan/OneDrive/Desktop/Nano-processor
User country: 	US
User language: 	en
User locale: 	en_US

RDI_BASEROOT: C:/Xilinx/Vivado
HDI_APPROOT: C:/Xilinx/Vivado/2018.1
RDI_DATADIR: C:/Xilinx/Vivado/2018.1/data
RDI_BINDIR: C:/Xilinx/Vivado/2018.1/bin

Vivado preferences file location: C:/Users/sahan/AppData/Roaming/Xilinx/Vivado/2018.1/vivado.xml
Vivado preferences directory: C:/Users/sahan/AppData/Roaming/Xilinx/Vivado/2018.1/
Vivado layouts directory: C:/Users/sahan/AppData/Roaming/Xilinx/Vivado/2018.1/layouts
PlanAhead jar file location: 	C:/Xilinx/Vivado/2018.1/lib/classes/planAhead.jar
Vivado log file location: 	C:/Users/sahan/OneDrive/Desktop/Nano-processor/vivado.log
Vivado journal file location: 	C:/Users/sahan/OneDrive/Desktop/Nano-processor/vivado.jou
Engine tmp dir: 	C:/Users/sahan/OneDrive/Desktop/Nano-processor/.Xil/Vivado-5248-Thimira

GUI allocated memory:	193 MB
GUI max memory:		3,052 MB
Engine allocated memory: 574 MB

Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.

*/

// TclEventType: START_GUI
// Tcl Message: start_gui 
// TclEventType: PROJECT_OPEN_DIALOG
// [GUI Memory]: 62 MB (+62051kb) [00:00:06]
// [Engine Memory]: 530 MB (+404699kb) [00:00:06]
// bv (ch):  Open Project : addNotify
// Opening Vivado Project: C:\Users\sahan\OneDrive\Desktop\Nano-processor\Nano-processor.xpr. Version: Vivado v2018.1 
// TclEventType: DEBUG_PROBE_SET_CHANGE
// Tcl Message: open_project C:/Users/sahan/OneDrive/Desktop/Nano-processor/Nano-processor.xpr 
// TclEventType: MSGMGR_MOVEMSG
// TclEventType: FILE_SET_NEW
// TclEventType: RUN_COMPLETED
// TclEventType: RUN_CURRENT
// TclEventType: PROJECT_NEW
// Tcl Message: open_project C:/Users/sahan/OneDrive/Desktop/Nano-processor/Nano-processor.xpr 
// Tcl Message: Scanning sources... Finished scanning sources 
// Tcl Message: INFO: [IP_Flow 19-234] Refreshing IP repositories INFO: [IP_Flow 19-1704] No user IP repositories specified 
// Tcl Message: INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'C:/Xilinx/Vivado/2018.1/data/ip'. 
// [GUI Memory]: 65 MB (+461kb) [00:00:11]
// [Engine Memory]: 574 MB (+18265kb) [00:00:11]
// HMemoryUtils.trashcanNow. Engine heap size: 578 MB. GUI used memory: 32 MB. Current time: 4/3/24 2:48:42 PM IST
// TclEventType: PROJECT_NEW
// [Engine Memory]: 629 MB (+27146kb) [00:00:12]
// [Engine Memory]: 667 MB (+7328kb) [00:00:14]
// Project name: Nano-processor; location: C:/Users/sahan/OneDrive/Desktop/Nano-processor; part: xc7a35tcpg236-1
// Tcl Message: open_project: Time (s): cpu = 00:00:07 ; elapsed = 00:00:07 . Memory (MB): peak = 857.996 ; gain = 89.719 
dismissDialog("Open Project"); // bv (ch)
// TclEventType: DG_ANALYSIS_MSG_RESET
// TclEventType: DG_GRAPH_GENERATED
// Tcl Message: update_compile_order -fileset sources_1 
selectTab((HResource) null, (HResource) null, "Tcl Console", 0); // aE (Q, ch)
// Tcl Command: 'rdi::info_commands {got*}'
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "got branch --all", true); // az (Y, ch)
// Tcl Command: 'got branch --all'
// Tcl Command: 'got branch --all'
// Tcl Message: got branch --all 
// Tcl Message: invalid command name "got" 
// Tcl Command: 'rdi::info_commands {g*}'
// Tcl Command: 'rdi::info_commands {gi*}'
setText(RDIResource.CommandsInput_TYPE_TCL_COMMAND_HERE, "git branch --all", true); // az (Y, ch)
// Tcl Command: 'git branch --all'
// Tcl Command: 'git branch --all'
// Tcl Message: git branch --all 
// Tcl Message: * instructionDecoder   main   registerBank   remotes/origin/HEAD -> origin/main   remotes/origin/adder   remotes/origin/instructionDecoder   remotes/origin/main   remotes/origin/multiplexer   remotes/origin/programCounter   remotes/origin/programRom   remotes/origin/registerBank 
// Tcl Command: 'rdi::info_commands {gitr*}'
